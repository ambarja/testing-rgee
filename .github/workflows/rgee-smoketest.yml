name: rgee + land4health (macOS, SA)

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  ee-macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            any::rgee
            any::jsonlite
            harmonize-tools/land4health
          needs: none

      # --- CREDENCIALES (Service Account) ---
      - name: Write EE ADC and env
        env:
          GEE_SA_KEY_B64: ${{ secrets.GEE_SA_KEY_B64 }}
          GEE_PROJECT_ID: ${{ secrets.GEE_PROJECT_ID }}
        run: |
          echo "$GEE_SA_KEY_B64" | base64 -d > "$RUNNER_TEMP/ee-key.json"
          echo "GOOGLE_APPLICATION_CREDENTIALS=$RUNNER_TEMP/ee-key.json" >> "$GITHUB_ENV"
          echo "GEE_PROJECT_ID=$GEE_PROJECT_ID" >> "$GITHUB_ENV"
          test -s "$RUNNER_TEMP/ee-key.json" || (echo "❌ clave vacía" && exit 1)
          [ -n "$GEE_PROJECT_ID" ] || (echo "❌ falta GEE_PROJECT_ID" && exit 1)

      # --- Validar que el JSON es una Service Account real (no OAuth) ---
      - name: Validate credentials JSON
        run: |
          python - <<'PY'
          import json, os, sys
          p = os.environ["GOOGLE_APPLICATION_CREDENTIALS"]
          d = json.load(open(p))
          print("JSON type:", d.get("type"))
          assert d.get("type") == "service_account", "❌ JSON no es Service Account (parece OAuth)."
          for k in ("project_id","client_email","private_key"):
              assert k in d, f"❌ Falta '{k}' en el JSON."
          print("✅ Service Account JSON OK.")
          PY

      # --- Crear el venv e instalar earthengine-api (vía tu paquete) ---
      - name: land4health install (rgee deps)
        run: Rscript -e 'library(land4health); land4health::l4h_install()'

      # --- Apuntar reticulate al venv que crea l4h_install() ---
      - name: Point reticulate to r-land4health venv
        run: |
          echo "RETICULATE_PYTHON=$HOME/.virtualenvs/r-land4health/bin/python" >> "$GITHUB_ENV"
          $HOME/.virtualenvs/r-land4health/bin/python - <<'PY'
          import ee, sys
          print("ee:", ee.__version__)
          print("python:", sys.executable)
          PY

      - name: Initialize EE in Python + test in R
        run: |
          Rscript - <<'RS'
          library(reticulate)
          use_python(Sys.getenv("RETICULATE_PYTHON"), required = TRUE)
          key_path <- Sys.getenv("GOOGLE_APPLICATION_CREDENTIALS")
          info     <- jsonlite::fromJSON(key_path)
          sa_email <- info$client_email
          py_code <- paste(
            "import ee, os",
            sprintf("cred = ee.ServiceAccountCredentials(%s, os.environ['GOOGLE_APPLICATION_CREDENTIALS'])", shQuote(sa_email)),
            "ee.Initialize(cred, project=os.environ.get('GEE_PROJECT_ID'))",
            sep = "\n"
          )
          py_run_string(py_code)
          library(rgee)
          ic <- ee$ImageCollection("COPERNICUS/S2_SR_HARMONIZED")$
                  filterDate("2024-01-01", "2024-01-02")
          cat("ImageCollection size:", ic$size()$getInfo(), "\n")
          cat("✅ Workflow OK.\n")
          RS
